[user]
	name = Bruno Barbosa
	email = bsbruno1@gmail.com
[branch]
	autosetuprebase = always
[color]
	branch = true
	decorate = true
	diff = true
	grep = true
	interactive = true
	showbranch = true
	status = true
	ui = true
[color "branch"]
	current = yellow black
	local = yellow bold
	remote = magenta bold
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
	whitespace = red bold reverse
[color "status"]
	added = green bold
	changed = red bold
	untracked = yellow bold
	branch = cyan bold reverse
[diff]
	tool = vscode
[core]
	editor = vim
	whitespace = tab-in-indent,tabwidth=4
	pager = less -sFXRMW
	commentChar = ";"
[alias]
	br = branch
	cc = checkout
	st = status
	df = diff
	ds = diff --staged
	lp = log -25 --graph --decorate --abbrev-commit --date=relative --pretty=format:'%C(bold magenta)%h%C(bold green) %ae%C(bold blue)%x09%ad%C(reset)%x09%s%C(auto)%d'
	lpp = log --graph --decorate --abbrev-commit --date=relative --pretty=format:'%C(bold yellow)%h%C(bold blue) %ae%C(bold cyan)%x09%ad%C(reset)%x09%s%C(auto)%d'
	lpa = log -25 --branches="bruno*/*" --graph --decorate --abbrev-commit --date=relative --pretty=format:'%C(bold yellow)%h%C(bold blue) %ae%C(bold cyan)%x09%ad%C(reset)%x09%s%C(auto)%d'
	lpaa = log --branches="bruno*/*" --graph --decorate --abbrev-commit --date=relative --pretty=format:'%C(bold yellow)%h%C(bold blue) %ae%C(bold cyan)%x09%ad%C(reset)%x09%s%C(auto)%d'
	lpas = log -25 --all --graph --decorate --abbrev-commit --date=relative --pretty=format:'%C(bold yellow)%h%C(bold blue) %ae%C(bold cyan)%x09%ad%C(reset)%x09%s%C(auto)%d'
	lpaas = log --all --graph --decorate --abbrev-commit --date=relative --pretty=format:'%C(bold yellow)%h%C(bold blue) %ae%C(bold cyan)%x09%ad%C(reset)%x09%s%C(auto)%d'
	mff = merge --ff-only
	rup = remote update -p
	r = remote -v
	pof = push origin HEAD -f
	poh = push origin HEAD
	fat = fetch --all --tags
	fixup = "!f() { TARGET=$(git rev-parse "$1"); git commit --fixup=$TARGET ${@:2} && EDITOR=true git rebase -i --autostash --autosquash $TARGET^; }; f"
[filter "lfs"]
	clean = git lfs clean %f
	smudge = git lfs smudge %f
	required = true
[grep]
	extendRegexp = true
	lineNumber = true
[rebase]
	autosquash = true
